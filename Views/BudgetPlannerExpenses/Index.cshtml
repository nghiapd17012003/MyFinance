@model IEnumerable<MyFinance.Models.BudgetPlannerExpense>

@{
    ViewData["Title"] = "Index";
    Dictionary<string, int> frequencyDict = new Dictionary<string, int>{
        {"Daily", 1},
        {"Weekly", 7},
        {"Fortnightly", 14},
        {"Monthly", 30},
        {"Yearly", 365},
    };
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<h1>Budget Planner - Expense</h1>


<div id="chartContainer">
    <canvas id="budgetPieChart"></canvas>
</div>



<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Frequency)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            Dictionary<string, double> chartData = new Dictionary<string, double>();
        }
        @foreach (var item in Model) {
            double tempValue = chartData.GetValueOrDefault(item.Type, 0.0);
            tempValue += item.Amount / frequencyDict[item.Frequency] * 7;
            chartData[item.Type] = tempValue;
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Frequency)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    var chartData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(chartData));
</script>
<script src="~/js/budgetPlanner.js"></script>
